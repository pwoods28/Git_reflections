How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    By removing unneccessary information and only leaving lines which were not
    consistent, the diff file made it easier to spot the bug.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Yes, it could provide quicker access to see changes between versions and
    spot bugs

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    pros of manual commits are reducing the amount of previous versions from
    which to compare when searching for bugs. Less is more. Cons could
    potentially include forgetting to commit for too long and potentially
    losing key changes as a result.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Allowing multiple files to be saved in one commit can be good when working
    with multi-file projects. Google Docs is more designed for single-file
    work and hence is not made for programming projects.

How can you use the commands git log and git diff to view the history of files?

    git log can be used to see a history of commits for the given project along with options for seeing the diffs for each update. These can help to make sense of how files have been changed over time.

How might using version control make you more confident to make changes that
could break something?

    If properly using version control, if you make a change that ruins your code you know that you can easily access the previous version of it which was working properly. This enables you to confidently try new things without fear of making crippling mistakes.

Now that you have your workspace set up, what do you want to try using Git for?

    Firstly for managing my own small, mostly single-file projects. Later, for more complex ones. I want to gain familiarity and confidence in using git and it's commands.
